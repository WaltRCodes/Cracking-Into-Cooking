{"version":3,"sources":["logo.svg","components/SignIn.js","components/SignUp.js","components/Recipe.js","components/Profile.js","components/Search.js","components/Navbar.js","components/RecipeForm.js","components/Ingredientform.js","components/Welcome.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SignIn","props","signInWithNameAndPasswordHandler","event","preventDefault","arrayIndex","state","users","findIndex","user","userName","password","console","log","id","Allowed","setState","error","onChangeHandler","target","name","value","bind","this","callApi","axios","get","response","data","className","type","placeholder","onChange","onClick","to","Component","SignUpPage","createUserWithNameAndPasswordHandler","postApi","message","object","post","Recipe","title","src","image","ingredients","search","addRecipe","editRecipe","deleteRecipe","Profile","resultsHTML","recipes","bringUpIngredients","bringUpRecipes","term","filter","obj","userId","elements","map","recipe","ingredient","deleteApi","document","getElementById","innerHTML","capture","description","amount","unit","delete","Search","searchTerm","makeSearch","takeTerm","process","missedIngredients","originalString","postDatabase","stored","callIngredients","callRecipes","onSubmit","Navbar","RecipeForm","split","submittingInfo","createRecipe","takeName","takeImage","takeDescription","takeIngredients","prevState","enabled","IngredientForm","parseFloat","createIngredient","takeUnit","takeAmount","Welcome","signedIn","signingIn","editOrDelete","first","second","third","fourth","join","exact","strict","path","render","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.82394916.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import {Link} from \"react-router-dom\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\n\nexport default class SignIn extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          users: [],\n          userName:'',\n          password:'',\n          error:''\n        }\n\n        this.onChangeHandler = this.onChangeHandler.bind(this);\n        this.signInWithNameAndPasswordHandler = this.signInWithNameAndPasswordHandler.bind(this);\n    }\n\n    componentDidMount() {\n        {/* call the api on page load */}\n        this.callApi();\n    }\n    async callApi() {\n        try {\n            const response = await axios.get('https://cors-anywhere.herokuapp.com/https://nameless-dawn-18115.herokuapp.com/walter_api/v2/users');\n            //console.log(response.data);\n            {/* store api data in state */}\n            this.setState({users:response.data});\n        } catch (e) {\n        console.log(e);\n        }\n    }\n    \n    signInWithNameAndPasswordHandler = (event) => {\n        event.preventDefault();\n        // auth.signInWithEmailAndPassword(email, password).catch(error => {\n        // setError(\"Error signing in with password and email!\");\n        //   console.error(\"Error signing in with password and email\", error);\n        // });\n        let arrayIndex =this.state.users.findIndex(user => user.userName===this.state.userName&&user.password===this.state.password);\n        if(arrayIndex!=-1){\n            console.log(this.state.users[arrayIndex].id);\n            this.props.Allowed(this.state.users[arrayIndex].id);\n        } else{\n            this.setState({error: <div>Sorry, no login was found</div>});\n        }\n\n\n      };\n      onChangeHandler = (event) => {\n          //const {name, value} = event.currentTarget;\n        \n          if(event.target.name === 'userName') {\n              this.setState({userName:event.target.value});\n          }\n          else if(event.target.name === 'userPassword'){\n            this.setState({password:event.target.value});\n          }\n      };\n\n      render() {\n        return (\n            <div className=\"main\">\n              <h1>Sign In</h1>\n              <div >\n                {this.state.error}\n                <form>\n                  <label>\n                    UserName:\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"userName\"\n                    placeholder=\"\"\n                    onChange = {this.onChangeHandler}\n                  />\n                  <label>\n                    Password:\n                  </label>\n                  <input\n                    type=\"password\"\n                    name=\"userPassword\"\n                    placeholder=\"Password\"\n                    onChange = {this.onChangeHandler}\n                  />\n                  <button onClick = {this.signInWithNameAndPasswordHandler}>\n                    Sign in\n                  </button>\n                </form>\n                 <Link to=\"/SignUp\">Don't have an account? Sign up here\n                  </Link>\n              </div>\n            </div>\n          );\n      }\n  \n};\n","import {Link} from \"react-router-dom\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\n\nexport default class SignUpPage  extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          users: [],\n          userName:'',\n          password:'',\n          message:''\n        }\n\n        this.onChangeHandler = this.onChangeHandler.bind(this);\n        this.createUserWithNameAndPasswordHandler = this.createUserWithNameAndPasswordHandler.bind(this);\n  }\n  \n\n  createUserWithNameAndPasswordHandler = (event) => {\n    event.preventDefault();\n    \n    let user = {\n        \"userName\": this.state.userName,\n        \"password\": this.state.password\n    };\n    \n    this.postApi(user);\n    this.setState({message:<p>Congrats, your profile was created successfully</p>});\n  };\n\n  onChangeHandler = (event) => {\n    //const { name, value } = event.currentTarget;\n\n    if(event.target.name === 'userName') {\n        this.setState({userName:event.target.value});\n    }\n    else if(event.target.name === 'userPassword'){\n      this.setState({password:event.target.value});\n    }\n  };\n\n  async postApi(object) {\n    try {\n      const response = await axios.post('https://cors-anywhere.herokuapp.com/https://nameless-dawn-18115.herokuapp.com/walter_api/v2/users',object);\n      \n      console.log(response.data);\n      console.log(response);\n      \n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n \n  render() {\n    return (\n        <div className=\"main\">\n          <h1>Sign Up</h1>\n          <div>\n            {this.state.message}\n            <form>\n              <label>\n                UserName:\n              </label>\n              <input\n                type=\"text\"\n                name=\"userName\"\n                placeholder=\"\"\n                onChange={this.onChangeHandler}\n              />\n              <label>\n                Password:\n              </label>\n              <input\n                type=\"password\"\n                name=\"userPassword\"\n                placeholder=\"Your Password\"\n                onChange={this.onChangeHandler}\n              />\n              <button onClick={this.createUserWithNameAndPasswordHandler}>\n                Sign up\n              </button>\n            </form>\n        \n            <Link to=\"/\">Already have an account? Sign in here</Link>\n          </div>\n        </div>\n      );\n\n  }\n  \n};\n","import React, { Component } from 'react';\n\n\n\nexport default class Recipe extends Component {\n    constructor(props) {\n        super(props);\n        \n  }\n   \n  render() {\n    return (\n        <div className=\"cell\">\n          <h1>{this.props.title}</h1>\n          <img src={this.props.image} />\n          <h3>With the following ingredients:</h3>\n          <div>{this.props.ingredients}</div>\n          <div id={this.props.id}>\n              {this.props.search\n              ? <button onClick={this.props.addRecipe}>Save Recipe to your profile</button>\n                : <div>\n                    {this.props.editRecipe}\n                    <button onClick={this.props.deleteRecipe}>Delete Recipe from your profile</button>\n                </div>}\n              \n          </div>\n        </div>\n      );\n\n  }\n  \n};\n","import React, { Component } from 'react'\nimport axios from 'axios';\nimport Recipe from './Recipe';\nimport {Link } from \"react-router-dom\";\n//changed the name to Home\nexport default class Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      resultsHTML:'',\n      ingredients:[''],\n      recipes:['']\n\n         \n    }\n    {/* make all the mehods that will be utilized*/}\n    this.bringUpIngredients = this.bringUpIngredients.bind(this);\n    this.bringUpRecipes = this.bringUpRecipes.bind(this);\n  }\n  async callApi(term) {\n    try {\n      const response = await axios.get('https://cors-anywhere.herokuapp.com/https://nameless-dawn-18115.herokuapp.com/walter_api/v2/'+term);\n      {/* call the API and create HTML elements*/}\n      //const response = await fetch(`https://api.spoonacular.com/recipes/findByIngredients?apiKey=${process.env.REACT_APP_KEY}&ingredients=${this.state.searchTerm}&number=2&limitLicense=false&ranking=1&ignorePantry=false`);\n    //const body = await response.json();\n      //console.log(body);\n      console.log(response.data);\n      let data = response.data.filter(obj => obj.userId === this.props.id);\n      let elements = <div>Error</div>;\n      if (term==='recipes'){\n        elements = data.map(recipe => <Recipe id={recipe.id}  search={false} title={recipe.name} image={recipe.image} \n            ingredients={recipe.ingredients.map(ingredient => <div>{ingredient}</div>)}\n        deleteRecipe={() => {this.deleteApi(\"recipes\",recipe.id); document.getElementById(recipe.id).innerHTML=\"Deleted Recipe!\";}}\n        editRecipe={\n            <Link to=\"/RecipeForm\" onClick={() => this.props.capture(\"recipes\",recipe.name,recipe.image,recipe.description,recipe.ingredients)} >\n              Edit this Recipe\n            </Link>\n        }\n        />);\n      }else if(term==='ingredients'){\n        elements = data.map(ingredient => \n        <div className=\"cell\">\n            <p>{ingredient.amount} {ingredient.unit} of {ingredient.name}</p>\n            <img src={ingredient.image}/>\n            <Link to=\"/IngredientForm\" onClick={() => this.props.capture('ingredients',ingredient.name,ingredient.image,ingredient.unit,ingredient.amount)} >\n              Edit this Ingredient\n            </Link>\n            <div id={ingredient.id}>\n                <button onClick={() => {this.deleteApi(\"ingredients\",ingredient.id); document.getElementById(ingredient.id).innerHTML=\"Deleted Ingredient!\";}}>Delete this ingredient from your list</button>\n            </div>\n        </div>);\n    }\n\n        {/* store the values in state*/}\n      this.setState({\n        resultsHTML: elements\n      })\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n//   componentDidMount() {\n//     {/* call the api on page load */}\n//     this.callIngredients();\n//     this.callRecipes();\n// }\n  \n//   async callIngredients() {\n//     try {\n//         const response = await axios.get('/walter_api/v2/ingredients');\n//         //console.log(response.data);\n//         {/* store api data in state */}\n//         this.setState({ingredients:response.data});\n//     } catch (e) {\n//     console.log(e);\n//     }\n// }\n\n// async callRecipes() {\n//     try {\n//         const response = await axios.get('/walter_api/v2/recipes');\n//         //console.log(response.data);\n//         {/* store api data in state */}\n//         this.setState({recipes:response.data});\n//     } catch (e) {\n//     console.log(e);\n//     }\n// }\n\nasync deleteApi(term,id) {\n    console.log(\"This is running\",id);\n    try {\n      const response = await axios.delete('https://cors-anywhere.herokuapp.com/https://nameless-dawn-18115.herokuapp.com/walter_api/v2/'+term+'/'+id);\n      \n      console.log(response.data);\n      console.log(response);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  \n  bringUpIngredients(){\n    this.callApi('ingredients');\n  }\n\n  bringUpRecipes(){\n    this.callApi('recipes');\n}\n\n  render() {\n    return (\n      <div>\n            \n            <h1>Check out your saved recipes and ingredients</h1>\n            <button onClick={this.bringUpRecipes}>Saved Recipes</button>\n            <button onClick={this.bringUpIngredients}>Saved Ingredients</button>\n            <div className=\"grid\">{this.state.resultsHTML}</div>\n      </div>\n      \n    )\n  }\n}","import React, { Component } from 'react'\nimport axios from 'axios';\nimport Recipe from './Recipe';\nexport default class Search extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchTerm: \"\",\n      resultsHTML:'',\n      ingredients:[],\n      recipes:[]\n\n         \n    }\n    {/* make all the mehods that will be utilized*/}\n    this.makeSearch = this.makeSearch.bind(this);\n    this.takeTerm = this.takeTerm.bind(this);\n  }\n  async callApi() {\n    try {\n      const response = await axios.get(`https://api.spoonacular.com/recipes/findByIngredients?apiKey=${process.env.REACT_APP_KEY}&ingredients=${this.state.searchTerm}&number=10&limitLicense=false&ranking=1&ignorePantry=false`);\n      {/* call the API and create HTML elements*/}\n      //const response = await fetch(`https://api.spoonacular.com/recipes/findByIngredients?apiKey=${process.env.REACT_APP_KEY}&ingredients=${this.state.searchTerm}&number=2&limitLicense=false&ranking=1&ignorePantry=false`);\n    //const body = await response.json();\n      //console.log(body);\n      console.log(response.data);\n      let elements = response.data.map(recipe => <Recipe id={recipe.id} search={true} editRecipe={''} title={recipe.title} image={recipe.image} \n        ingredients={recipe.missedIngredients.map(ingredient => <div>{ingredient.originalString}<div id={ingredient.id}><button onClick={() => {this.postDatabase(\"ingredients\",{\n        \"id\": this.state.ingredients.findIndex(stored => stored.name===ingredient.name)!=-1 ? this.state.ingredients[this.state.ingredients.findIndex(stored => stored.name===ingredient.name)].id:null,//put check here later and make button diappear\n        \"name\": ingredient.name,\n        \"amount\": this.state.ingredients.findIndex(stored => stored.name===ingredient.name)!=-1 ? this.state.ingredients[this.state.ingredients.findIndex(stored => stored.name===ingredient.name)].amount+ingredient.amount:ingredient.amount,\n        \"image\": ingredient.image,\n        \"unit\": ingredient.unit,\n        \"userId\": this.props.id\n    }); document.getElementById(ingredient.id).innerHTML=\"Added Ingredient!\";}}>Add this ingredient to your list</button></div></div>)}\n    addRecipe={() => {this.postDatabase(\"recipes\",{\n        \"id\": null,//put check here later and make button diappear\n        \"name\": recipe.title,\n        \"image\": recipe.image,\n        \"description\": \"null\",\n        \"ingredients\": recipe.missedIngredients.map(ingredient =>ingredient.originalString),\n        \"userId\": this.props.id\n    }); document.getElementById(recipe.id).innerHTML=\"Added Recipe!\";}}\n    />);\n        {/* store the values in state*/}\n      this.setState({\n        resultsHTML: elements\n      })\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  componentDidMount() {\n    {/* call the api on page load */}\n    this.callIngredients();\n    this.callRecipes();\n}\n  \n  async callIngredients() {\n    try {\n        const response = await axios.get('https://cors-anywhere.herokuapp.com/https://nameless-dawn-18115.herokuapp.com/walter_api/v2/ingredients');\n        //console.log(response.data);\n        {/* store api data in state */}\n        this.setState({ingredients:response.data});\n    } catch (e) {\n    console.log(e);\n    }\n}\n\nasync callRecipes() {\n    try {\n        const response = await axios.get('https://cors-anywhere.herokuapp.com/https://nameless-dawn-18115.herokuapp.com/walter_api/v2/recipes');\n        //console.log(response.data);\n        {/* store api data in state */}\n        this.setState({recipes:response.data});\n    } catch (e) {\n    console.log(e);\n    }\n}\n\nasync postDatabase(term,object) {\n    try {\n      const response = await axios.post('https://cors-anywhere.herokuapp.com/https://nameless-dawn-18115.herokuapp.com/walter_api/v2/'+term,object);\n      \n      console.log(response.data);\n      console.log(response);\n      \n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  makeSearch(event){\n    event.preventDefault();\n    \n    \n    this.callApi();\n    \n  }\n  \n  takeTerm(event){\n    this.setState({searchTerm: event.target.value});\n  }\n \n  \n\n\n  render() {\n    return (\n      <div className=\"main\">\n            <form onSubmit={this.makeSearch}>\n            <h1>What Ingredients do you already have?</h1>\n            <label>\n                Search\n                <input type=\"text\" onChange={this.takeTerm} placeholder=\"search term\"/>\n            </label>\n            <br />\n            \n            <br />\n            <label>\n                <input type=\"submit\" value=\"Submit\"/>\n            </label>\n          </form>\n            <div className=\"grid\">{this.state.resultsHTML}</div>\n      </div>\n      \n    )\n  }\n}","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nconst Navbar = () => {\n  return (\n    <div className=\"nav-bar\">\n        <Link to=\"/\">Home</Link>\n        <Link to=\"/RecipeForm\">Make new Recipe</Link>\n        <Link to=\"/IngredientForm\">Make new Ingredient</Link>\n        <Link to=\"/Search\">Search</Link>\n    </div>\n  );\n}\n\nexport default Navbar;","import React, { Component } from 'react';\nimport axios from 'axios';\n\nexport default class RecipeForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: this.props.name,\n      image: this.props.image,\n      description: this.props.description,\n      recipes:[],\n      ingredients:this.props.ingredients.split(','),\n      submittingInfo:true\n         \n    }\n    {/* make all the mehods that will be utilized*/}\n    this.createRecipe = this.createRecipe.bind(this);\n    this.takeName = this.takeName.bind(this);\n    this.takeImage = this.takeImage.bind(this);\n    this.takeDescription = this.takeDescription.bind(this);\n    this.takeIngredients = this.takeIngredients.bind(this);\n  }\n\n  componentDidMount() {\n    {/* call the api on page load */}\n    this.callRecipes();\n    document.getElementById('recipename').value=this.props.name;\n    document.getElementById('recipeimage').value=this.props.image;\n    document.getElementById('recipedescription').value=this.props.description;\n    document.getElementById('recipeingredients').value=this.props.ingredients;\n}\n\nasync callRecipes() {\n    try {\n        const response = await axios.get('https://cors-anywhere.herokuapp.com/https://nameless-dawn-18115.herokuapp.com/walter_api/v2/recipes');\n        //console.log(response.data);\n        {/* store api data in state */}\n        this.setState({recipes:response.data});\n    } catch (e) {\n    console.log(e);\n    }\n}\n  \n  async postApi(object) {\n    try {\n      const response = await axios.post('https://cors-anywhere.herokuapp.com/https://nameless-dawn-18115.herokuapp.com/walter_api/v2/recipes',object);\n      \n      console.log(response.data);\n      console.log(response);\n      \n    } catch (e) {\n      console.log(e);\n    }\n  }\n  \n  createRecipe(event){\n    event.preventDefault();\n    let recipe = {\n        \"id\": this.state.recipes.findIndex(stored => stored.name===this.state.name)!=-1 ? this.state.recipes[this.state.recipes.findIndex(stored => stored.name===this.state.name)].id:null,//put check here later and make button diappear\n        \"name\": this.state.name,\n        \"image\": this.state.image,\n        \"description\": this.state.description,\n        \"ingredients\": this.state.ingredients,\n        \"userId\": this.props.id\n    };\n    \n    this.postApi(recipe);\n    this.setState(prevState => ({\n        submittingInfo: !prevState.submittingInfo\n      }));\n  }\n  \n  takeName(event){\n    this.setState({name: event.target.value});\n  }\n  takeImage(event){\n    this.setState({image: event.target.value});\n  }\n  takeDescription(event){\n    this.setState({description: event.target.value});\n  }\n  takeIngredients(event){\n    this.setState({ingredients: event.target.value.split(',')});\n  }\n  \n//onclick of the update button, have the values of that cell sent as props here to fill in the form\n\n  render() {\n    return (\n      <div className=\"main\">\n        {\n            this.state.submittingInfo\n            ?\n            <form id=\"main\" onSubmit={this.createRecipe}>\n            <h1>Enter the info for your new Recipe and please seperate ingredients with a \",\"</h1>\n            <label>\n                Name\n                <input type=\"text\" onChange={this.takeName} id=\"recipename\" enabled=\"true\" />\n            </label>\n            <br />\n            <label>\n                Image URL\n                <input type=\"text\" onChange={this.takeImage} id=\"recipeimage\" enabled=\"true\"/>\n            </label>\n            <br />\n            <label>\n                Description\n                <input type=\"text\" onChange={this.takeDescription} id=\"recipedescription\" enabled=\"true\" />\n            </label>\n            <br />\n            <label>\n                Ingredients\n                <input type=\"text\" onChange={this.takeIngredients} id=\"recipeingredients\" enabled=\"true\"/>\n            </label>\n            <br />\n            <label>\n                <input type=\"submit\" value=\"Submit\"/>\n            </label>\n          </form>\n            :\n            <h1>Thanks for your submission</h1>\n        }\n        \n      </div>\n      \n    )\n  }\n}","import React, { Component } from 'react';\nimport axios from 'axios';\n\nexport default class IngredientForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: this.props.name,\n      image: this.props.image,\n      unit: this.props.unit,\n      amount:parseFloat(this.props.amount),\n      ingredients:[],\n      submittingInfo:true\n         \n    }\n    {/* make all the mehods that will be utilized*/}\n    this.createIngredient = this.createIngredient.bind(this);\n    this.takeName = this.takeName.bind(this);\n    this.takeImage = this.takeImage.bind(this);\n    this.takeUnit = this.takeUnit.bind(this);\n    this.takeAmount = this.takeAmount.bind(this);\n  }\n\n  componentDidMount() {\n    {/* call the api on page load */}\n    this.callIngredients();\n    document.getElementById('ingredientname').value=this.props.name;\n    document.getElementById('ingredientimage').value=this.props.image;\n    document.getElementById('ingredientunit').value=this.props.unit;\n    document.getElementById('ingredientamt').value=this.props.amount;\n}\n  \n  async callIngredients() {\n    try {\n        const response = await axios.get('https://cors-anywhere.herokuapp.com/https://nameless-dawn-18115.herokuapp.com/walter_api/v2/ingredients');\n        //console.log(response.data);\n        {/* store api data in state */}\n        this.setState({ingredients:response.data});\n    } catch (e) {\n    console.log(e);\n    }\n}\n  \n  async postApi(object) {\n    try {\n      const response = await axios.post('https://cors-anywhere.herokuapp.com/https://nameless-dawn-18115.herokuapp.com/walter_api/v2/ingredients',object);\n      \n      console.log(response.data);\n      console.log(response);\n      \n    } catch (e) {\n      console.log(e);\n    }\n  }\n  \n  createIngredient(event){\n    event.preventDefault();\n    let ingredient = {\n        \"id\": this.state.ingredients.findIndex(stored => stored.name===this.state.name)!=-1 ? this.state.ingredients[this.state.ingredients.findIndex(stored => stored.name===this.state.name)].id:null,//put check here later and make button diappear\n        \"name\": this.state.name,\n        \"amount\": this.state.amount,\n        \"image\": this.state.image,\n        \"unit\": this.state.unit,\n        \"userId\": this.props.id\n    };\n    \n    this.postApi(ingredient);\n    this.setState(prevState => ({\n        submittingInfo: !prevState.submittingInfo\n      }));\n  }\n  \n  takeName(event){\n    this.setState({name: event.target.value});\n  }\n  takeImage(event){\n    this.setState({image: event.target.value});\n  }\n  takeAmount(event){\n    this.setState({amount: parseFloat(event.target.value)});\n  }\n  takeUnit(event){\n    this.setState({unit: event.target.value});\n  }\n  \n//onclick of the update button, have the values of that cell sent as props here to fill in the form\n\n  render() {\n    return (\n      <div className=\"main\">\n        {\n            this.state.submittingInfo\n            ?\n            <form id=\"main\" onSubmit={this.createIngredient}>\n            <h1>Enter the info for your new Ingredient</h1>\n            <label>\n                Name\n                <input type=\"text\" onChange={this.takeName} id=\"ingredientname\" enabled=\"true\"/>\n            </label>\n            <br />\n            <label>\n                Image URL\n                <input type=\"text\" onChange={this.takeImage} id=\"ingredientimage\" enabled=\"true\"/>\n            </label>\n            <br />\n            <label>\n                Unit\n                <input type=\"text\" onChange={this.takeUnit} id=\"ingredientunit\" enabled=\"true\"/>\n            </label>\n            <br />\n            <label>\n                Amount\n                <input type=\"number\" onChange={this.takeAmount} id=\"ingredientamt\" enabled=\"true\"/>\n            </label>\n            <br />\n            <label>\n                <input type=\"submit\" value=\"Submit\"/>\n            </label>\n          </form>\n            :\n            <h1>Thanks for your submission</h1>\n        }\n        \n      </div>\n      \n    )\n  }\n}","import React, { Component } from 'react';\nimport {\n    HashRouter,\n    Route\n  } from \"react-router-dom\";\nimport SignIn from './SignIn';\nimport SignUp from './SignUp';\nimport Profile from './Profile';\nimport Search from './Search';\nimport Navbar from './Navbar';\nimport RecipeForm from './RecipeForm';\nimport IngredientForm from './Ingredientform';\nexport default class Welcome extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          signedIn: false,\n          user:0,\n          ingredient: {\n            \"name\": \"\",\n            \"amount\": 0,\n            \"image\": \"\",\n            \"unit\": \"\"\n            },\n          recipe: {\n            \"name\": \"\",\n            \"image\": \"\",\n            \"description\": \"\",\n            \"ingredients\": \"\"\n            }\n        }\n        this.signingIn = this.signingIn.bind(this);\n        this.editOrDelete = this.editOrDelete.bind(this);\n  }\n\n  signingIn(id){\n    {/* update the ymbol in state */}\n    this.setState({signedIn: true,user:id});\n    //console.log(this.state.user);\n  }\n  editOrDelete(term,first,second,third,fourth){\n    if (term==='recipes'){\n       this.setState({\n        recipe: {\n            \"name\": first,\n            \"image\": second,\n            \"description\": third,\n            \"ingredients\": fourth.join(\",\")\n            }\n       });\n      }else if(term==='ingredients'){\n        this.setState({\n            ingredient: {\n            \"name\": first,\n            \"amount\": parseFloat(fourth),\n            \"image\": second,\n            \"unit\": third\n            }});\n    }\n  }\n\n  render() {\n    return (\n      <div>\n          {this.state.signedIn ?\n            <HashRouter>\n                <Navbar />\n                <Route exact strict path=\"/\" render={() => <div><Profile id={this.state.user} capture={this.editOrDelete}/></div>} />\n                <Route path=\"/Search\" render={() => <div><Search id={this.state.user}/></div>} />\n                <Route path=\"/RecipeForm\" render={() => <div><RecipeForm id={this.state.user} name={this.state.recipe.name} image={this.state.recipe.image} description={this.state.recipe.description} ingredients={this.state.recipe.ingredients}/></div>} />\n                <Route path=\"/IngredientForm\" render={() => <div><IngredientForm id={this.state.user} name={this.state.ingredient.name} image={this.state.ingredient.image} unit={this.state.ingredient.unit} amount={this.state.ingredient.amount}/></div>} />\n            </HashRouter>\n            \n        :\n            <HashRouter>\n                <Route exact strict path=\"/\" render={() => <div><SignIn Allowed={this.signingIn}/></div>} />\n                <Route path=\"/SignUp\" render={() => <div><SignUp/></div>} />\n            </HashRouter>\n        }\n        \n        \n      </div>\n      \n    )\n  }\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Welcome from './components/Welcome';\nfunction App() {\n  return (\n    <div>\n      \n      <Welcome />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from \"react-router-dom\"\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter><App /></HashRouter>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}